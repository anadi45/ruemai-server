{
  "featureName": "Creating a New Workflow",
  "totalActions": 21,
  "estimatedDuration": 60,
  "scrapingStrategy": "The scraping strategy focuses on simulating user interactions by clicking buttons, filling forms, and selecting options. It avoids direct URL navigation unless absolutely necessary and ends before any final 'Create' or 'Save' action. Comprehensive waiting and error handling mechanisms are included.",
  "actions": [
    {
      "type": "click",
      "selector": "a[href='/workflows']",
      "fallbackSelector": "//a[contains(text(), 'Workflows')]",
      "inputText": null,
      "description": "Navigate to the Workflows tab.",
      "expectedOutcome": "The Workflows page should load.",
      "waitCondition": "nav.ant-menu-root",
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 5,
      "errorHandling": "Retry the click if the element is not clickable or does not lead to the expected page.",
      "prerequisites": [
        "User is logged in"
      ]
    },
    {
      "type": "click",
      "selector": "a[href='/workflows/general']",
      "fallbackSelector": "//a[contains(text(), 'General')]",
      "inputText": null,
      "description": "Navigate to the General sub-tab under Workflows.",
      "expectedOutcome": "The General Workflows page should load, displaying a list of existing workflows and a 'Create workflow' button.",
      "waitCondition": "button:has-text('Create workflow')",
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 5,
      "errorHandling": "Retry the click if the element is not clickable or does not lead to the expected page.",
      "prerequisites": [
        "Workflows page is loaded"
      ]
    },
    {
      "type": "click",
      "selector": "button:has-text('Create workflow')",
      "fallbackSelector": "//button[contains(text(), 'Create workflow')]",
      "inputText": null,
      "description": "Click the 'Create workflow' button to initiate the workflow creation process.",
      "expectedOutcome": "A form or modal for creating a new workflow should appear.",
      "waitCondition": "input[placeholder='Workflow Name']",
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 5,
      "errorHandling": "Retry the click if the element is not clickable or the creation form does not appear.",
      "prerequisites": [
        "General Workflows page is loaded"
      ]
    },
    {
      "type": "type",
      "selector": "input[placeholder='Workflow Name']",
      "fallbackSelector": "//input[@placeholder='Workflow Name']",
      "inputText": "Test Workflow Automation",
      "description": "Enter a name for the workflow in the 'Workflow Name' field.",
      "expectedOutcome": "The workflow name field should contain 'Test Workflow Automation'.",
      "waitCondition": null,
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 3,
      "errorHandling": "Check if the input field is present and writable before typing.",
      "prerequisites": [
        "Workflow creation form is visible"
      ]
    },
    {
      "type": "click",
      "selector": "div[aria-label='Select Salesforce object']",
      "fallbackSelector": "//div[contains(@class, 'ant-select') and contains(., 'Salesforce object')]",
      "inputText": null,
      "description": "Click the Salesforce object dropdown to open the selection menu.",
      "expectedOutcome": "A list of Salesforce objects should appear in a dropdown.",
      "waitCondition": "div.ant-select-dropdown",
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 5,
      "errorHandling": "Retry if dropdown fails to open.",
      "prerequisites": [
        "Workflow name is entered"
      ]
    },
    {
      "type": "type",
      "selector": "input.ant-select-selection-search-input",
      "fallbackSelector": "//input[@class='ant-select-selection-search-input']",
      "inputText": "Account",
      "description": "Type 'Account' in the Salesforce object search field.",
      "expectedOutcome": "The dropdown list should filter to show Salesforce objects containing 'Account'.",
      "waitCondition": null,
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 3,
      "errorHandling": "Retry if input field is not found",
      "prerequisites": [
        "Salesforce object dropdown is open"
      ]
    },
    {
      "type": "click",
      "selector": "div.ant-select-item-option-content:has-text('Account')",
      "fallbackSelector": "//div[@class='ant-select-item-option-content' and contains(text(), 'Account')]",
      "inputText": null,
      "description": "Select the 'Account' object from the dropdown list.",
      "expectedOutcome": "The selected Salesforce object field should now display 'Account'.",
      "waitCondition": null,
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 3,
      "errorHandling": "Retry if the element is not clickable or the object is not selected",
      "prerequisites": [
        "'Account' object is visible in the dropdown"
      ]
    },
    {
      "type": "click",
      "selector": "div[aria-label='Select workflow type']",
      "fallbackSelector": "//div[contains(@class, 'ant-select') and contains(., 'workflow type')]",
      "inputText": null,
      "description": "Click on 'Select workflow type' dropdown",
      "expectedOutcome": "Dropdown to select Moment in time, Stuck in stage, or Summary type should appear",
      "waitCondition": "div.ant-select-dropdown",
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 5,
      "errorHandling": "Retry if dropdown fails to open",
      "prerequisites": [
        "Account object is selected"
      ]
    },
    {
      "type": "click",
      "selector": "div.ant-select-item-option-content:has-text('Moment in time')",
      "fallbackSelector": "//div[@class='ant-select-item-option-content' and contains(text(), 'Moment in time')]",
      "inputText": null,
      "description": "Select the 'Moment in time' workflow type.",
      "expectedOutcome": "The selected Workflow type should now display 'Moment in time'.",
      "waitCondition": null,
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 3,
      "errorHandling": "Retry if the element is not clickable or the workflow type is not selected",
      "prerequisites": [
        "Workflow type dropdown is open"
      ]
    },
    {
      "type": "click",
      "selector": "div[aria-label='Select field']",
      "fallbackSelector": "//div[contains(@class, 'ant-select') and contains(., 'Select field')]",
      "inputText": null,
      "description": "Click on 'Select field' dropdown to define conditions",
      "expectedOutcome": "Dropdown with the conditions fields should appear",
      "waitCondition": "div.ant-select-dropdown",
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 5,
      "errorHandling": "Retry if dropdown fails to open",
      "prerequisites": [
        "Workflow type is selected"
      ]
    },
    {
      "type": "type",
      "selector": "input.ant-select-selection-search-input",
      "fallbackSelector": "//input[@class='ant-select-selection-search-input']",
      "inputText": "Name",
      "description": "Type 'Name' in the Condition field search field.",
      "expectedOutcome": "The dropdown list should filter to show fields containing 'Name'.",
      "waitCondition": null,
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 3,
      "errorHandling": "Retry if input field is not found",
      "prerequisites": [
        "Select field dropdown is open"
      ]
    },
    {
      "type": "click",
      "selector": "div.ant-select-item-option-content:has-text('Name')",
      "fallbackSelector": "//div[@class='ant-select-item-option-content' and contains(text(), 'Name')]",
      "inputText": null,
      "description": "Select the 'Name' field from the dropdown list.",
      "expectedOutcome": "The selected Condition field should now display 'Name'.",
      "waitCondition": null,
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 3,
      "errorHandling": "Retry if the element is not clickable or the field is not selected",
      "prerequisites": [
        "'Name' object is visible in the dropdown"
      ]
    },
    {
      "type": "click",
      "selector": "div[aria-label='Select condition']",
      "fallbackSelector": "//div[contains(@class, 'ant-select') and contains(., 'Select condition')]",
      "inputText": null,
      "description": "Click on 'Select condition' dropdown",
      "expectedOutcome": "Dropdown with the conditions such as 'Equals', 'Not equals' should appear",
      "waitCondition": "div.ant-select-dropdown",
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 5,
      "errorHandling": "Retry if dropdown fails to open",
      "prerequisites": [
        "Condition field is selected"
      ]
    },
    {
      "type": "click",
      "selector": "div.ant-select-item-option-content:has-text('Equals')",
      "fallbackSelector": "//div[@class='ant-select-item-option-content' and contains(text(), 'Equals')]",
      "inputText": null,
      "description": "Select the 'Equals' condition.",
      "expectedOutcome": "The selected Condition should now display 'Equals'.",
      "waitCondition": null,
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 3,
      "errorHandling": "Retry if the element is not clickable or the condition is not selected",
      "prerequisites": [
        "Condition dropdown is open"
      ]
    },
    {
      "type": "type",
      "selector": "input[placeholder='Enter Condition Value']",
      "fallbackSelector": "//input[@placeholder='Enter Condition Value']",
      "inputText": "Test Account",
      "description": "Enter the condition value 'Test Account'.",
      "expectedOutcome": "The 'Enter Condition Value' field should contain 'Test Account'.",
      "waitCondition": null,
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 3,
      "errorHandling": "Check if the input field is present and writable before typing.",
      "prerequisites": [
        "Condition 'Equals' is selected"
      ]
    },
    {
      "type": "click",
      "selector": "div[aria-label='DM or Channels']",
      "fallbackSelector": "//div[contains(@class, 'ant-select') and contains(., 'DM or Channels')]",
      "inputText": null,
      "description": "Click on 'DM or Channels' dropdown to select delivery settings",
      "expectedOutcome": "Dropdown with the 'DM or Channels' option should appear",
      "waitCondition": "div.ant-select-dropdown",
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 5,
      "errorHandling": "Retry if dropdown fails to open",
      "prerequisites": [
        "Condition 'Enter Condition Value' is selected"
      ]
    },
    {
      "type": "click",
      "selector": "div.ant-select-item-option-content:has-text('DM')",
      "fallbackSelector": "//div[@class='ant-select-item-option-content' and contains(text(), 'DM')]",
      "inputText": null,
      "description": "Select 'DM' for message delivery.",
      "expectedOutcome": "'DM' option should be selected in the dropdown",
      "waitCondition": null,
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 3,
      "errorHandling": "Retry if the element is not clickable or the DM is not selected",
      "prerequisites": [
        "DM or Channels dropdown is open"
      ]
    },
    {
      "type": "click",
      "selector": "div[aria-label='Search and select recipients']",
      "fallbackSelector": "//div[contains(@class, 'ant-select') and contains(., 'Search and select recipients')]",
      "inputText": null,
      "description": "Click on 'Search and select recipients' to open recipients dropdown",
      "expectedOutcome": "A dropdown for searching and selecting recipients should appear.",
      "waitCondition": "div.ant-select-dropdown",
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 5,
      "errorHandling": "Retry if the recipients dropdown failed to open",
      "prerequisites": [
        "Message type is selected"
      ]
    },
    {
      "type": "type",
      "selector": "input.ant-select-selection-search-input",
      "fallbackSelector": "//input[@class='ant-select-selection-search-input']",
      "inputText": "User",
      "description": "Type 'User' in the recipients search field.",
      "expectedOutcome": "The dropdown list should filter to show recipients containing 'User'.",
      "waitCondition": null,
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 3,
      "errorHandling": "Retry if input field is not found",
      "prerequisites": [
        "Recipient dropdown is open"
      ]
    },
    {
      "type": "click",
      "selector": "div.ant-select-item-option-content:has-text('Test User')",
      "fallbackSelector": "//div[@class='ant-select-item-option-content' and contains(text(), 'Test User')]",
      "inputText": null,
      "description": "Select the 'Test User' recipient.",
      "expectedOutcome": "The selected Recipient should now display 'Test User'.",
      "waitCondition": null,
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 3,
      "errorHandling": "Retry if the element is not clickable or the recipient is not selected",
      "prerequisites": [
        "Test User is visible in the dropdown"
      ]
    },
    {
      "type": "wait",
      "selector": "button:has-text('Create workflow')",
      "fallbackSelector": "//button[contains(text(), 'Create workflow')]",
      "inputText": null,
      "description": "Wait to ensure all form elements and data entries are completed and the 'Create workflow' button is ready.",
      "expectedOutcome": "The 'Create workflow' button is visible and enabled.",
      "waitCondition": null,
      "extractData": null,
      "priority": "high",
      "estimatedDuration": 2,
      "errorHandling": "If timeout, it suggests either the form is incomplete or page loaded with some issue",
      "prerequisites": [
        "All parameters are filled"
      ]
    }
  ],
  "summary": {
    "clickActions": 14,
    "typeActions": 5,
    "navigationActions": 0,
    "waitActions": 2,
    "extractActions": 0,
    "evaluateActions": 0
  }
}